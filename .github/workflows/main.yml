---
#@generated
name: Lint and Push
on:
  push:
    branches: ["main", "cd/docker_initial"]
  pull_request:
    branches: ["main", "cd/docker_initial"]
jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Super-linter
        uses: super-linter/super-linter@v6.1.1
        env:
          IGNORE_GENERATED_FILES: true
          VALIDATE_CHECKOV: false
          VALIDATE_PYTHON_PYLINT: false
          VALIDATE_PYTHON: true
          LINTER_RULES_PATH: ./config/lint
          PYTHON_BLACK_CONFIG_FILE: pyproject.toml
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: andrey66/menu_bot:latest

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
    steps:
      # Шаг для checkout репозитория
      - name: Checkout code
        uses: actions/checkout@v3

      # Шаг для настройки SSH-агента и добавления приватного ключа
      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Шаг для копирования файлов через SCP
      - name: Copy docker-compose.yml via SCP
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "docker-compose.production.yml"
          target: "menu_bot/docker-compose.production.yml"
#      - name: Copy docker-compose.yml via ssh
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          password: ${{ secrets.SSH_PASSPHRASE }}
#          source: "docker-compose.production.yml"
#          target: "menu_bot/docker-compose.production.yml"
#      - name: Executing remote ssh commands to deploy
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          password: ${{ secrets.SSH_PASSPHRASE }}
#          script: |
#            cd menu_bot
#            sudo docker compose -f docker-compose.production.yml pull
#            sudo docker compose -f docker-compose.production.yml down
#            sudo docker compose -f docker-compose.production.yml up -d
