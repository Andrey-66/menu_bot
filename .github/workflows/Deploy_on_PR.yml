---
#@generated
name: Deploy
on:
  pull_request:
    branches: ["master"]
    types: [closed]  # Срабатывает только при закрытии PR

permissions:
  contents: read  # Чтение репозитория
  issues: write   # Права на запись в issues (нужны для комментариев в PR)
  pull-requests: write  # Права на изменение PR (нужны для их обновления)

jobs:
  build_and_push_to_docker_hub:
    name: Push Docker image to DockerHub
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: andrey66/menu_bot:latest
      - name: Add comment about successful Docker push
        if: success()  # Если деплой и пуш прошли успешно
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"body": "Deployment to DockerHub was successful!"}' \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"

          - name: Add comment about Docker push failure
            if: failure()  # Если произошла ошибка в пуше
            run: |
              curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d '{"body": "Deployment to DockerHub failed. Please check the logs for errors."}' \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"

  deploy:
    runs-on: ubuntu-latest
    needs:
      - build_and_push_to_docker_hub
    if: github.event.pull_request.merged == true
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          password: ${{ secrets.PASSWORD }}
          script: |
            cd menu_bot
            sudo docker compose -f docker-compose.production.yml pull
            sudo docker compose -f docker-compose.production.yml down
            sudo docker compose -f docker-compose.production.yml up -d
      - name: Add comment about successful deployment
        if: success()  # Если деплой прошел успешно
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -d '{"body": "Deployment to production server was successful!"}' \
          "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"

          - name: Add comment about deployment failure
            if: failure()  # Если произошла ошибка в деплое
            run: |
              curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -d '{"body": "Deployment to production server failed. Please check the logs for errors."}' \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"